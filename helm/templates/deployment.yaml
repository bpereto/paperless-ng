#
# APP
#
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "paperless-ng.fullname" . }}-app
  labels:
    {{- include "paperless-ng.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "paperless-ng.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "paperless-ng.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "paperless-ng.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            - name: "PAPERLESS_DBPASS"
              valueFrom:
                secretKeyRef:
                  key: postgresql-password
                  name: paperless-ng-postgresql
            - name: "PAPERLESS_SECRET_KEY"
              valueFrom:
                secretKeyRef:
                  key: PAPERLESS_SECRET_KEY
                  name: paperless-ng-app
            - name: "PAPERLESS_ADMIN_PASSWORD"
              valueFrom:
                secretKeyRef:
                  key: PAPERLESS_ADMIN_PASSWORD
                  name: paperless-ng-app
            {{- if .Values.app.email.enabled }}
            - name: "EMAIL_HOST"
              value: "{{ .Values.app.email.host }}"
            - name: "EMAIL_PORT"
              value: "{{ .Values.app.email.port }}"
            - name: "EMAIL_HOST_USER"
              value: "{{ .Values.app.email.host_user }}"
            - name: "EMAIL_HOST_PASSWORD"
              value: "{{ .Values.app.email.host_password }}"
            - name: "EMAIL_USE_SSL"
              value: "{{ .Values.app.email.use_ssl }}"
            - name: "EMAIL_FROM"
              value: "{{ .Values.app.email.from }}"
            {{- end }}
          volumeMounts:
            - mountPath: "/usr/src/paperless/data"
              name: {{ include "paperless-ng.fullname" . }}-data
            - mountPath: "/usr/src/paperless/media"
              name: {{ include "paperless-ng.fullname" . }}-media
            - mountPath: "/usr/src/paperless/export"
              name: {{ include "paperless-ng.fullname" . }}-export
            - mountPath: "/usr/src/paperless/consume"
              name: {{ include "paperless-ng.fullname" . }}-consume
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: {{ include "paperless-ng.fullname" . }}-data
          {{- if .Values.persistence.data.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.data.existingClaim }}
          {{- else}}
          persistentVolumeClaim:
            claimName: {{ include "paperless-ng.fullname" . }}-data
          {{- end}}
        - name: {{ include "paperless-ng.fullname" . }}-media
          {{- if .Values.persistence.media.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.media.existingClaim }}
          {{- else}}
          persistentVolumeClaim:
            claimName: {{ include "paperless-ng.fullname" . }}-media
          {{- end}}
        - name: {{ include "paperless-ng.fullname" . }}-export
          {{- if .Values.persistence.export.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.export.existingClaim }}
          {{- else}}
          persistentVolumeClaim:
            claimName: {{ include "paperless-ng.fullname" . }}-export
          {{- end}}
        - name: {{ include "paperless-ng.fullname" . }}-consume
          {{- if .Values.persistence.consume.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.consume.existingClaim }}
          {{- else}}
          persistentVolumeClaim:
            claimName: {{ include "paperless-ng.fullname" . }}-consume
          {{- end}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
#
# TIKA
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "paperless-ng.fullname" . }}-tika
  labels:
    {{- include "paperless-ng.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "paperless-ng.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "paperless-ng.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "paperless-ng.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: tika
          image: "{{ .Values.tika.repository }}:{{ .Values.tika.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
#
# GOTENBERG
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "paperless-ng.fullname" . }}-gotenberg
  labels:
    {{- include "paperless-ng.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "paperless-ng.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "paperless-ng.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "paperless-ng.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: tika
          image: "{{ .Values.gotenberg.repository }}:{{ .Values.gotenberg.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: "DISABLE_GOOGLE_CHROME"
              value: "1"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
